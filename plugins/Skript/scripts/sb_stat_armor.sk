on armor change:
	if name of player's helmet contains "&6Ancient Tarantula Helmet":
		set player's helmet to air
		send "&cSorry this helmet is bugged currently to avoid to get ban for profit it!" to player

command /reloadarmorstatremove <player>:
	permission: op
	trigger:
		SB_Reload_ArmorStatRemove(arg-1)
		send "&6&lRELOADED ARMOR %player%" to arg-1

function SB_Reload_ArmorStatRegen(p: player):
	if {DungeonParty::*} contains "%{_p}%":
		set {_pU} to {_p}'s uuid
		set {Health.%{_pU}%} to {MaxHealth.%{_pU}%}
		set {mana.%{_pU}%} to {Intelligence.%{_pU}%}
	
function SB_Reload_ArmorStat(p: player):
	if {_a} is not true:
		set {_pU} to {_p}'s uuid
		set {_h} to {_p}'s helmet
		set {_c} to {_p}'s chestplate
		set {_l} to {_p}'s leggings
		set {_b} to {_p}'s boots
		set {_p}'s helmet to air
		set {_p}'s chestplate to air
		set {_p}'s legs to air
		set {_p}'s boots to air
		wait 2.5 tick
		if {_p}'s helmet is air:
			set {_p}'s helmet to {_h}
		else:
			add {_h} to {Pickupstash.%{_pU}%::*}
			SB_MovedToPickupstash({_p}, {_h})
		if {_p}'s chestplate is air:
			set {_p}'s chestplate to {_c}
		else:
			add {_c} to {Pickupstash.%{_pU}%::*}
			SB_MovedToPickupstash({_p}, {_c})
		if {_p}'s legs is air:
			set {_p}'s legs to {_l}
		else:
			add {_l} to {Pickupstash.%{_pU}%::*}
			SB_MovedToPickupstash({_p}, {_l})
		if {_p}'s boots is air:
			set {_p}'s boots to {_b}
		else:
			add {_b} to {Pickupstash.%{_pU}%::*}
			SB_MovedToPickupstash({_p}, {_b})
# ////////////////////////////////////////////
function SB_Reload_ArmorStatRemove(p: player):
	set {_pU} to {_p}'s uuid
	loop 4 times:
		if {_a} is not set:
			if {_boots} is not true:
				set {_a} to "Boots"
				set {_boots} to true
		if {_a} is not set:
			if {_legs} is not true:
				set {_a} to "Legs"
				set {_legs} to true
		if {_a} is not set:
			if {_chest} is not true:
				set {_a} to "Chest"
				set {_chest} to true
		if {_a} is not set:
			if {_helm} is not true:
				set {_a} to "Helmet"
				set {_helm} to true
		SB_Reload_ArmorStatRemover({_p}, {_a})
				
function SB_Reload_ArmorStatRemover(p: player, a: text):
	set {_pU} to {_p}'s uuid
	if {_a} is set:
		remove {Stat-Armor-%{_a}%-Defense.%{_pU}%} from {defense.%{_pU}%}
		remove {Stat-Armor-%{_a}%-MaxHealth.%{_pU}%} from {Maxhealth.%{_pU}%}
		remove {Stat-Armor-%{_a}%-Intelligence.%{_pU}%} from {Intelligence.%{_pU}%}

		if {Speed-Value.%{_pU}%} is not set:
			set {Speed-Value.%{_pU}%} to 1
		remove {Stat-Armor-%{_a}%-Speed.%{_pU}%} from {Speed.%{_pU}%} # INCLUDE: WARDEN'S CURSE
		if {Speed-Value.%{_pU}%} is equal to 1:
			delete {Speed-Value.%{_pU}%}

		remove {Stat-Armor-%{_a}%-Strength.%{_pU}%} from {Strength.%{_pU}%}
		remove {Stat-Armor-%{_a}%-crit.%{_pU}%} from {critdamage.%{_pU}%}
		remove {Stat-Armor-%{_a}%-cc.%{_pU}%} from {critchance.%{_pU}%}
		remove {Stat-Armor-%{_a}%-AttackSpeed.%{_pU}%} from {attackspeed.%{_pU}%}
		remove {Stat-Armor-%{_a}%-AbilityDamage.%{_pU}%} from {AbilityDamage.%{_pU}%}
		remove {Stat-Armor-%{_a}%-MiningSpeed.%{_pU}%} from {MiningSpeed.%{_pU}%}
		remove {Stat-Armor-%{_a}%-ForagingFortune.%{_pU}%} from {ForagingFortune.%{_pU}%}
		remove {Stat-Armor-%{_a}%-FarmingFortune.%{_pU}%} from {FarmingFortune.%{_pU}%}
		remove {Stat-Armor-%{_a}%-MiningFortune.%{_pU}%} from {MiningFortune.%{_pU}%}
		remove {Stat-Armor-%{_a}%-Ferocity.%{_pU}%} from {Ferocity.%{_pU}%}
	
		delete {Stat-Armor-%{_a}%-Defense.%{_pU}%}
		delete {Stat-Armor-%{_a}%-Strength.%{_pU}%}
		delete {Stat-Armor-%{_a}%-crit.%{_pU}%}
		delete {Stat-Armor-%{_a}%-cc.%{_pU}%}
		delete {Stat-Armor-%{_a}%-AttackSpeed.%{_pU}%}
		delete {Stat-Armor-%{_a}%-MiningSpeed.%{_pU}%}
		delete {Stat-Armor-%{_a}%-AbilityDamage.%{_pU}%}
		delete {Stat-Armor-%{_a}%-Speed.%{_pU}%}
		delete {Stat-Armor-%{_a}%-MaxHealth.%{_pU}%}
		delete {Stat-Armor-%{_a}%-Intelligence.%{_pU}%}
		delete {Stat-Armor-%{_a}%-MiningFortune.%{_pU}%}
		delete {Stat-Armor-%{_a}%-ForagingFortune.%{_pU}%}
		delete {Stat-Armor-%{_a}%-FarmingFortune.%{_pU}%}
		delete {Stat-Armor-%{_a}%-Ferocity.%{_pU}%}
		
	# ================= ABILITY ARMOR REMOVE
		delete {RegenerationMultiplicator.%{_pU}%}
	# ==
		delete {_a}
			
# ///////////////////////////////////////////
on armor change:
# //// WARDROBE ////
	set {_cc} to {Wardrobe-EquipedSlot.%UUID of player%::2}
	if {_cc} is set:
		delete {Wardrobe-%{_cc}%.%UUID of player%::*}
		if player's helmet is set:
			add player's helmet to {Wardrobe-%{_cc}%.%UUID of player%::*}
		if player's chestplate is set:
			add player's chestplate to {Wardrobe-%{_cc}%.%UUID of player%::*}
		if player's leggings is set:
			add player's leggings to {Wardrobe-%{_cc}%.%UUID of player%::*}
		if player's boots is set:
			add player's boots to {Wardrobe-%{_cc}%.%UUID of player%::*}
# ////
	if {_b} is not set:
		if {_a} is not set:
			if event-item is a helmet or a player head:
				if {_helm} is not true:
					set {_a} to "Helmet"
					set {_helm} to true
		if {_a} is not set:
			if event-item is a leggings:
				if {_legs} is not true:
					set {_a} to "Legs"
					set {_legs} to true
		if {_a} is not set:
			if event-item is a chestplate:
				if {_chest} is not true:
					set {_a} to "Chest"
					set {_chest} to true
		if {_a} is not set:
			if event-item is a boots:
				if {_boots} is not true:
					set {_a} to "Boots"
					set {_boots} to true
		if {_a} is set:
			SB_Reload_ArmorStatRemover(player, {_a})
	delete {_a}
	loop 4 times:
		if {_a} is not set:
			if player's helmet is air:
				if {_helm} is not true:
					set {_a} to "Helmet"
					set {_helm} to true
		if {_a} is not set:
			if player's legs is air:
				if {_legs} is not true:
					set {_a} to "Legs"
					set {_legs} to true
		if {_a} is not set:
			if player's chestplate is air:
				if {_chest} is not true:
					set {_a} to "Chest"
					set {_chest} to true
		if {_a} is not set:
			if player's boots is air:
				if {_boots} is not true:
					set {_a} to "Boots"
					set {_boots} to true
					
# ==========
		if {Speed-Value.%UUID of player%} is set:
			set {Speed.%UUID of player%} to ({Speed.%UUID of player%}*2)
			set {Stat-Armor-%{_a}%-Speed.%UUID of player%} to ({Stat-Armor-%{_a}%-Speed.%UUID of player%}*2)
			delete {Speed-Value.%UUID of player%}
# ==========
		remove {Stat-Armor-%{_a}%-Defense.%UUID of player%} from {defense.%UUID of player%}
		remove {Stat-Armor-%{_a}%-MaxHealth.%UUID of player%} from {Maxhealth.%UUID of player%}
		remove {Stat-Armor-%{_a}%-Intelligence.%UUID of player%} from {Intelligence.%UUID of player%}

		remove {Stat-Armor-%{_a}%-Speed.%UUID of player%} from {Speed.%UUID of player%} # INCLUDE: WARDEN'S CURSE

		remove {Stat-Armor-%{_a}%-Strength.%UUID of player%} from {Strength.%UUID of player%}
		remove {Stat-Armor-%{_a}%-crit.%UUID of player%} from {critdamage.%UUID of player%}
		remove {Stat-Armor-%{_a}%-cc.%UUID of player%} from {critchance.%UUID of player%}
		remove {Stat-Armor-%{_a}%-AttackSpeed.%UUID of player%} from {attackspeed.%UUID of player%}
		remove {Stat-Armor-%{_a}%-AbilityDamage.%UUID of player%} from {AbilityDamage.%UUID of player%}
		remove {Stat-Armor-%{_a}%-MiningSpeed.%UUID of player%} from {MiningSpeed.%UUID of player%}
		remove {Stat-Armor-%{_a}%-ForagingFortune.%UUID of player%} from {ForagingFortune.%UUID of player%}
		remove {Stat-Armor-%{_a}%-FarmingFortune.%UUID of player%} from {FarmingFortune.%UUID of player%}
		remove {Stat-Armor-%{_a}%-MiningFortune.%UUID of player%} from {MiningFortune.%UUID of player%}
		remove {Stat-Armor-%{_a}%-Ferocity.%{_pU}%} from {Ferocity.%{_pU}%}
	
		delete {Stat-Armor-%{_a}%-Defense.%UUID of player%}
		delete {Stat-Armor-%{_a}%-Strength.%UUID of player%}
		delete {Stat-Armor-%{_a}%-crit.%UUID of player%}
		delete {Stat-Armor-%{_a}%-cc.%UUID of player%}
		delete {Stat-Armor-%{_a}%-AttackSpeed.%UUID of player%}
		delete {Stat-Armor-%{_a}%-MiningSpeed.%UUID of player%}
		delete {Stat-Armor-%{_a}%-AbilityDamage.%UUID of player%}
		delete {Stat-Armor-%{_a}%-Speed.%UUID of player%}
		delete {Stat-Armor-%{_a}%-MaxHealth.%UUID of player%}
		delete {Stat-Armor-%{_a}%-Intelligence.%UUID of player%}
		delete {Stat-Armor-%{_a}%-MiningFortune.%UUID of player%}
		delete {Stat-Armor-%{_a}%-ForagingFortune.%UUID of player%}
		delete {Stat-Armor-%{_a}%-FarmingFortune.%UUID of player%}
		delete {Stat-Armor-%{_a}%-Ferocity.%{_pU}%}
		
		delete {_a}
# ////////////////////////
	if {_b} is not set:
		if event-item is a helmet or a player head:
			set {_a} to "Helmet"
		if event-item is a chestplate:
			set {_a} to "Chest"
		if event-item is a leggings:
			set {_a} to "Legs"
		if event-item is a boots:
			set {_a} to "Boots"
		set {_p} to player
		set {_pU} to {_p}'s uuid
# //// CURSE EFFECT ARMOR ////
		if name of event-item contains "&dGiant Reaper Mask":
			set {RegenerationMultiplicator.%UUID of player%} to 2


# ====
		if {_a} is set:
			set {_lore::*} to event-item's lore
			loop {_lore::*}:
				add 1 to {_v}
				if loop-value-1 contains "&7Santé:" or "&7Health:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-hp} to {_s::1}
				if loop-value-1 contains "&7Speed:" or "&7Vitesse:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-spd} to {_s::1}
				if loop-value-1 contains "&7Strength:" or "&7Force:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-str} to {_s::1}
				if loop-value-1 contains "&7Crit Damage:" or "&7Dégât Critique:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-crit} to {_s::1}
				if loop-value-1 contains "&7Crit Chance:" or "&7Chance Critique:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-cc} to {_s::1}
				if loop-value-1 contains "&7Bonus Attack Speed:" or "&7Vitesse d'Attaque:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-ats} to {_s::1}
				if loop-value-1 contains "&7Ability Damage:" or "&7Dégât de Capacité:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-abd} to {_s::1}
				if loop-value-1 contains "&7Defense:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-def} to {_s::1}
				if loop-value-1 contains "&7Mining Speed:" or "&7Vitesse de Minage:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-ms} to {_s::1}
				if loop-value-1 contains "&7Intelligence:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-mana} to {_s::1}
				if loop-value-1 contains "&7Fortune Agricole:" or "&7Farming Fortune:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-fa} to {_s::1}
				if loop-value-1 contains "&7Fortune Minière:" or "&7Mining Fortune:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-fm} to {_s::1}
				if loop-value-1 contains "&7Fortune Forestière:" or "&7Foraging Fortune:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-ff} to {_s::1}
				if loop-value-1 contains "&7Ferocité:" or "&7Ferocity:":
					set {_s::*} to split "%{_lore::%{_v}%}%" by "("
					set {_l-fr} to {_s::1}
				if loop-value-1 contains "&6Capacité" or "&6Item Ability":
					delete {_lore::*}
# /////////////////////////////////
			if name of event-item contains "&6✪":
				set {_b} to 10
			if name of event-item contains "&6✪✪":
				set {_b} to 20
			if name of event-item contains "&6✪✪✪":
				set {_b} to 30
			if name of event-item contains "&6✪✪✪✪":
				set {_b} to 40
			if name of event-item contains "&6✪✪✪✪✪":
				set {_b} to 50
			if name of event-item contains "&c✪&6✪✪✪✪":
				set {_b} to 55
			if name of event-item contains "&c✪✪&6✪✪✪":
				set {_b} to 60
			if name of event-item contains "&c✪✪✪&6✪✪":
				set {_b} to 65
			if name of event-item contains "&c✪✪✪✪&6✪":
				set {_b} to 70
			if name of event-item contains "&c✪✪✪✪✪":
				set {_b} to 75
			# NO MASTER MODE MODE
			if {SBD-f7-Difficulty} is not equal to 24:
				if {_b} is higher than 50:
					set {_b} to 50
# =
			if {DungeonParty::*} contains "%{_p}%":
				if "%lore of event-item%" contains "&d&lMYTHIC DUNGEON" or "&6&lLEGENDARY DUNGEON" or "&5EPIC DUNGEON" or "&9&lRARE DUNGEON" or "&a&lUNCOMMUN DUNGEON" or "&f&lCOMMON DUNGEON":
					set {_isb} to {Catacomb-ItemStatBoost.%{_pU}%}
					set {_w} to (({_isb}+{_b})/100)
					set {_w2} to ({_isb}/100)
				else:
					set {_w} to 1
					set {_w2} to 1
					set {_b} to 1
			else:
				set {_w} to 1
				set {_w2} to 1
				set {_b} to 1
	# =====
			set {_m} to 1
			if {DungeonParty::*} contains "%player%":
				if "%lore of event-item%" contains "&a2x &7stats":
					set {_m} to 2
# /////////////////////////////////
			if {_l-hp} is set:
				set {_hp} to numbers in uncoloured {_l-hp}
				set {_hp} to {_hp} parsed as number
				set {_hp} to ({_hp}*{_w})
				set {_hp} to round({_hp}*{_m})
			if {_l-def} is set:
				set {_def} to numbers in uncoloured {_l-def}
				set {_def} to {_def} parsed as number
				set {_def} to ({_def}*{_w})
				set {_def} to round({_def}*{_m})
			if {_l-mana} is set:
				set {_mana} to numbers in uncoloured {_l-mana}
				set {_mana} to {_mana} parsed as number
				set {_mana} to ({_mana}*{_w})
				set {_mana} to round({_mana}*{_m})
			if {_l-ms} is set: # NO
				set {_ms} to numbers in uncoloured {_l-ms}
				set {_ms} to {_ms} parsed as number
				set {_ms} to round({_ms})
			if {_l-ats} is set:
				set {_ats} to numbers in uncoloured {_l-ats}
				set {_ats} to {_ats} parsed as number
				set {_ats} to ({_ats}*{_w2})
				set {_ats} to round({_ats}*{_m})
			if {_l-str} is set:
				set {_str} to numbers in uncoloured {_l-str}
				set {_str} to {_str} parsed as number
				set {_str} to ({_str}*{_w})
				set {_str} to round({_str}*{_m})
			if {_l-crit} is set:
				set {_crit} to numbers in uncoloured {_l-crit}
				set {_crit} to {_crit} parsed as number
				set {_crit} to ({_crit}*{_w})
				set {_crit} to round({_crit}*{_m})
			if {_l-cc} is set:
				set {_cc} to numbers in uncoloured {_l-cc}
				set {_cc} to {_cc} parsed as number
				set {_cc} to ({_cc}*{_w2})
				set {_cc} to round({_cc}*{_m})
			if {_l-abd} is set:
				set {_abd} to numbers in uncoloured {_l-abd}
				set {_abd} to {_abd} parsed as number
				set {_abd} to ({_abd}*{_w})
				set {_abd} to round({_abd}*{_m})
			if {_l-spd} is set:
				set {_spd} to numbers in uncoloured {_l-spd}
				set {_spd} to {_spd} parsed as number
				set {_spd} to ({_spd}*{_w})
				set {_spd} to round({_spd}*{_m})
			if {Speed-Value.%UUID of player%} is set:
				set {_spd} to round({_spd}*{Speed-Value.%UUID of player%})
			if {_l-fa} is set: # NO
				set {_fa} to numbers in uncoloured {_l-fa}
				set {_fa} to {_fa} parsed as number
				set {_fa} to round({_fa})
			if {_l-fm} is set: # NO
				set {_fm} to numbers in uncoloured {_l-fm}
				set {_fm} to {_fm} parsed as number
				set {_fm} to round({_fm})
			if {_l-ff} is set: # NO
				set {_ff} to numbers in uncoloured {_l-ff}
				set {_ff} to {_ff} parsed as number
				set {_ff} to round({_ff})
			if {_l-fr} is set: # NO
				set {_fr} to numbers in uncoloured {_l-fr}
				set {_fr} to {_fr} parsed as number
				set {_fr} to round({_fr})
# ===
			add {_hp} to {MaxHealth.%UUID of player%}
			add {_def} to {Defense.%UUID of player%}
			add {_mana} to {Intelligence.%UUID of player%}
			add {_spd} to {Speed.%UUID of player%}
			add {_abd} to {AbilityDamage.%UUID of player%}
			add {_cc} to {critchance.%UUID of player%}
			add {_crit} to {critdamage.%UUID of player%}
			add {_str} to {strength.%UUID of player%}
			add {_ms} to {MiningSpeed.%UUID of player%}
			add {_ats} to {AttackSpeed.%UUID of player%}
			add {_ff} to {ForagingFortune.%UUID of player%}
			add {_fa} to {FarmingFortune.%UUID of player%}
			add {_fm} to {MiningFortune.%UUID of player%}
			add {_fr} to {Ferocity.%UUID of player%}
		
			set {Stat-Armor-%{_a}%-MaxHealth.%UUID of player%} to {_hp}
			set {Stat-Armor-%{_a}%-Defense.%UUID of player%} to {_def}
			set {Stat-Armor-%{_a}%-Intelligence.%UUID of player%} to {_mana}
			set {Stat-Armor-%{_a}%-AbilityDamage.%UUID of player%} to {_abd}
			set {Stat-Armor-%{_a}%-Speed.%UUID of player%} to {_spd}
			set {Stat-Armor-%{_a}%-AttackSpeed.%UUID of player%} to {_ats}
			set {Stat-Armor-%{_a}%-crit.%UUID of player%} to {_crit}
			set {Stat-Armor-%{_a}%-cc.%UUID of player%} to {_cc}
			set {Stat-Armor-%{_a}%-Strength.%UUID of player%} to {_str}
			set {Stat-Armor-%{_a}%-MiningSpeed.%UUID of player%} to {_ms}
			set {Stat-Armor-%{_a}%-FarmingFortune.%UUID of player%} to {_fa}
			set {Stat-Armor-%{_a}%-MiningFortune.%UUID of player%} to {_fm}
			set {Stat-Armor-%{_a}%-ForagingFortune.%UUID of player%} to {_ff}
			set {Stat-Armor-%{_a}%-Ferocity.%UUID of player%} to {_fr}
# ////////////////////////////////////
			SB_Reload_ArmorStatRegen(player)